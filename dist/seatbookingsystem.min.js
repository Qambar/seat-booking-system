define("module/seat",[],function(){"use strict";var t;return t=function(t){if(t=t||{},"undefined"==typeof t.row||"undefined"==typeof t.col)throw new Error("You need to specify the seat position.");if(t.row<0||t.col<0)throw new Error("Seat position cannot be negative.");this.row=t.row,this.col=t.col,this.booked=!1},t.prototype={book:function(){if(this.isAvailable())return this.booked=!0,!0;throw new Error("Seat is already booked.")},cancel:function(){if(!this.isAvailable())return this.booked=!1,!0;throw new Error("Seat was never booked.")},isAvailable:function(){return!this.booked}},t}),define("module/seats/initializer",["module/seat"],function(t){"use strict";var e;return e=function(t){t=t||{},this.totalSeats=t.totalSeats||67,this.seatsInOneRow=t.seatsInOneRow||5,this.numOfRows=Math.ceil(this.totalSeats/this.seatsInOneRow),this._initSeats()},e.prototype={_seats:[],getSeats:function(){return this._seats},_initSeats:function(){this._seats=[];for(var e=0,s=0;e<this.numOfRows;e++){this._seats[e]=[];for(var n=0;n<this.seatsInOneRow&&s<this.totalSeats;n++,s++)this._seats[e][n]=new t({row:e,col:n})}return this._seats}},e}),define("module/seats/finder",["module/seat"],function(){"use strict";var t;return t=function(t,e){if("undefined"==typeof t)throw new Error("Seats are not defined.");this._seats=t,this._maxSeatsInARow=e},t.prototype={_maxSeatsInARow:null,_seats:null,_seatsAvailableInEachRow:[],find:function(t){if(t>this._maxSeatsInARow)throw new Error("Cannot book more than 5 seats");if(1>t)throw new Error("You cannot find 0 or less seats");this._calculateAvailableSeats();var e=this._tryToFindSeatsInOneRow(t);if(e.length>0)return e;var s=this._tryToFindSeatsAnywhere(t);return s?s:[]},_calculateAvailableSeats:function(){this._seatsAvailableInEachRow=this._getAllAvailableSeats()},_tryToFindSeatsAnywhere:function(t){var e=[];return this._seatsAvailableInEachRow.forEach(function(s){s.forEach(function(s){e.length!==t&&e.push(s)})}),e.length===t?e:[]},_tryToFindSeatsInOneRow:function(t){var e=this._seatsAvailableInEachRow.filter(function(e){return e.length>=t});return e.length>0?e[0].slice(0,t):[]},_getAllAvailableSeats:function(){var t=this,e=[];return this._seats.forEach(function(s){var n=t._getSeatsAvailableInOneRow(s);e.push(n)}),e},_getSeatsAvailableInOneRow:function(t){for(var e=[],s=0;s<t.length;s++)t[s].isAvailable()&&e.push(t[s]);return e}},t}),define("seatbookingsystem",["module/seats/initializer","module/seats/finder"],function(t,e){"use strict";var s;return s=function(t){t=t||{},this.totalSeats=t.totalSeats||67,this.seatsInOneRow=t.seatsInOneRow||5,this.maxBookingPerPerson=t.maxBookingPerPerson||5,this.numOfRows=Math.ceil(this.totalSeats/this.seatsInOneRow),this.init()},s.prototype={_seatsFinder:null,_seats:[],init:function(){var s=new t({totalSeats:this.totalSeats,seatsInOneRow:this.seatsInOneRow,maxBookingPerPerson:this.maxBookingPerPerson});this._seats=s.getSeats(),this._seatsFinder=new e(this._seats,this.maxBookingPerPerson)},book:function(t){if(isNaN(t))throw new Error("Invalid Argument for numOfSeatsRequired");var e=this._seatsFinder.find(t);return e.length>0&&e.forEach(function(t){t.book()}),e},cancel:function(t){if(isNaN(t.row)||isNaN(t.col)||t.row>this.numOfRows||t.col>this.seatsInOneRow)throw new Error("Invalid seat position");return this._seats[t.row][t.col].cancel()},getAllSeats:function(){return this._seats}},s});